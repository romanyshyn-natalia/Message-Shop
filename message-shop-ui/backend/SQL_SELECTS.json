{
  "select1": "SELECT Customer.name FROM Customer\n  JOIN POST\n  ON Customer.customer_id = POST.customer_id\n  JOIN Author\n  ON POST.author_id = Author.author_id\n  WHERE Author.name = '{author}' AND\n \tdate between '{start}'::date AND ('{end}'::date + '1 day'::interval)\n  GROUP BY Customer.customer_id\n  HAVING COUNT(Customer.customer_id) >= {min_quantity};",
  "select2": "SELECT DISTINCT name FROM (\nSELECT Author.name\n  FROM Post\n  JOIN Author\n    ON Post.author_id = Author.author_id\n  JOIN Customer\n    ON Post.customer_id = Customer.customer_id\n  WHERE Customer.name = '{customer}' AND date between '{start}'::date AND ('{end}'::date + '1 day'::interval)\nUNION\nSELECT Author.name\n  FROM Article\n  JOIN Customer\n    ON Article.customer_id = Customer.customer_id\n  JOIN Author_AuthorGroup\n    ON Article.author_group_id = Author_AuthorGroup.author_group_id\n  JOIN Author\n    ON Author.author_id = Author_AuthorGroup.author_id\n  WHERE Customer.name = '{customer}' AND date between '{start}'::date AND ('{end}'::date + '1 day'::interval)) AS Auth;",
  "select3": "SELECT Author.name, COUNT(DISTINCT Post_cust.customer_id) AS number_of_distinct_customers\nFROM (\n  SELECT Customer.customer_id, Post.author_id\n  FROM Customer\n  INNER JOIN Post\n  ON Customer.customer_id = Post.customer_id\n  WHERE date between '{start}'::date AND ('{end}'::date + '1 day'::interval)\n) AS Post_cust\nINNER JOIN Author\nON Author.author_id = Post_cust.author_id\nGROUP BY Author.author_id\nHAVING COUNT(DISTINCT Post_cust.customer_id) >= {min_quantity};",
  "select4": "SELECT DISTINCT name FROM (\nSELECT Customer.name\n  FROM Customer\n  INNER JOIN Post\n    ON Customer.customer_id = Post.customer_id\n  WHERE date between '{start}'::date AND ('{end}'::date + '1 day'::interval)\n  GROUP BY Customer.customer_id\n  HAVING COUNT(Customer.customer_id) >= {min_quantity}\nUNION\nSELECT Customer.name\n  FROM Article\n  JOIN Customer\n    ON Article.customer_id = Customer.customer_id\n  JOIN Author_AuthorGroup\n    ON Article.author_group_id = Author_AuthorGroup.author_group_id\n  JOIN Author\n    ON Author.author_id = Author_AuthorGroup.author_id\n  WHERE date between '{start}'::date AND ('{end}'::date + '1 day'::interval)\n  GROUP BY Customer.customer_id\n  HAVING COUNT(Customer.customer_id) >= {min_quantity}) AS Cus;",
  "select5": "SELECT article_orders.network_id, article_orders.name, post_count+article_count as orders_count FROM\n(SELECT Social_network.name, Social_network.network_id, COUNT(Post_cust.customer_id) as post_count\nFROM (\n  SELECT Customer.customer_id, Post.network_id\n  FROM Customer\n  INNER JOIN Post\n  ON Customer.customer_id = Post.customer_id\n  WHERE date between '{start}'::date AND ('{end}'::date + '1 day'::interval)\n    AND Customer.customer_id = '{customer_id}'\n) AS Post_cust\nRIGHT JOIN Social_network\nON Social_network.network_id = Post_cust.network_id\nGROUP BY Social_network.network_id) AS post_orders\nJOIN\n(SELECT Social_network.name, Social_network.network_id, COUNT(Article_cust.customer_id) as article_count\nFROM (\n  SELECT Customer.customer_id, Article.network_id\n  FROM Customer\n  INNER JOIN Article\n  ON Customer.customer_id = Article.customer_id\n  WHERE date between '{start}'::date AND ('{end}'::date + '1 day'::interval)\n    AND Customer.customer_id = '{customer_id}'\n) AS Article_cust\nRIGHT JOIN Social_network\nON Social_network.network_id = Article_cust.network_id\nGROUP BY Social_network.network_id) AS article_orders\nON article_orders.network_id=post_orders.network_id\nWHERE article_orders.article_count+post_orders.post_count >= {min_quantity};",
  "select6": "SELECT customer_id FROM\nAccess_token INNER JOIN\n(SELECT author_id from Author WHERE name='{author}') as A\nON A.author_id=Access_token.author_id\nAND Access_token.status=true\nOR Access_token.given between '{start}'::date and '{end}'::date;",
  "select7": "SELECT Author.name as authors\nFROM Access_token\nINNER JOIN (SELECT customer_id,name FROM Customer WHERE name='{customer}') AS C\nON Access_token.customer_id=C.customer_id\nINNER JOIN Author ON Author.author_id=Access_token.author_id\nWHERE Access_token.status=false;",
  "select8": "SELECT ( SELECT\n\tpost_id FROM Post\n\tINNER JOIN (SELECT customer_id, name FROM Customer WHERE Customer.name='{customer}') as C\n\tON Post.customer_id=C.customer_id\n\tINNER JOIN (SELECT author_id, name FROM Author WHERE Author.name='{author}') AS A\n\tON Post.author_id=A.author_id\n\tAND date between\n\t'{start}'::date AND '{end}'::date\n) as posts,\n(\nSELECT \n\ttoken_id FROM (Access_token\n\tINNER JOIN Customer ON Customer.customer_id=Access_token.customer_id)\n\tINNER JOIN Author ON Author.author_id=Access_token.author_id\n\tWHERE Customer.name = '{customer}' AND Author.name = '{author}'\n\tAND given > '{start}'::date\n) as tokens_given,\n(\nSELECT \n\ttoken_id FROM Access_token\n\tINNER JOIN Customer ON Customer.customer_id=Access_token.customer_id\n\tINNER JOIN Author ON Author.author_id=Access_token.author_id\n\tWHERE Customer.name = '{customer}' AND Author.name = '{author}'\n\tAND NOT status AND terminated < '{end}'::date\n) as tokens_terminated;",
  "select9": "SELECT Social_network.name, COUNT(Article.article_id) AS article_number\n  FROM Article\n  JOIN (SELECT name, author_group_id \n\t\tFROM Author JOIN Author_AuthorGroup\n\t\tON Author.author_id = Author_AuthorGroup.author_id) as AG\n  ON Article.author_group_id = AG.author_group_id\n  JOIN Social_network\n  ON Article.network_id = Social_network.network_id\n  JOIN (SELECT AuthorGroup.author_group_id, COUNT(AuthorGroup.author_group_id) AS author_amount\n        FROM Author_AuthorGroup\n        JOIN AuthorGroup\n        ON Author_AuthorGroup.author_group_id = AuthorGroup.author_group_id\n        GROUP BY AuthorGroup.author_group_id) AS AuthorAmount\n  ON Article.author_group_id = AuthorAmount.author_group_id\n  WHERE AG.name = 'Bill' AND date between '2018-03-01'::date AND ('2021-05-30'::date + '1 day'::interval) AND author_amount >= 1\n  GROUP BY Social_network.network_id;\n",
  "select10": "select style_name, COUNT(X.post_id) from PostStyles join (select * from PromosWeek join (select * from Post join Customer on Post.customer_id=Customer.customer_id where Customer.customer_id='{customer}') as CustomerPosts on PromosWeek.author_id=CustomerPosts.author_id where CustomerPosts.date between '{start}'::date and '{end}'::date and CustomerPosts.date between PromosWeek.start_date and PromosWeek.start_date+'7 days'::interval and PromosWeek.amount=50) as X on X.style_id=PostStyles.style_id GROUP BY PostStyles.style_id;",
  "select11": "SELECT COUNT(*), DATE_TRUNC('month', date) AS  month \nFROM Post\nGROUP BY DATE_TRUNC('month', date);",
  "select12": "SELECT Social_network.name\n  FROM Post\n  JOIN PostStyles\n    ON Post.style_id = PostStyles.style_id\n  JOIN Author\n    ON Post.author_id = Author.author_id\n  JOIN Social_network\n    ON Post.network_id = Social_network.network_id\n  WHERE Author.name = '{author}' AND date between '{start}'::date AND ('{end}'::date + '1 day'::interval)\n  GROUP BY Social_network.name\n  ORDER BY COUNT(Post.style_id) DESC;",
  "select13": "SELECT * FROM PromosWeek;"

}